How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Isolates the changed text to reduce which text must be reviewed.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Ability to return to or reuse a code fragment in an older version.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Time-based auto-save has a large chance of saving versions w/o changes or
    with changes that are incomplete which will be useless for future review.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git is purpose-built for programming which often requires collections of
    files to implement code. 

How can you use the commands git log and git diff to view the history of files?

    To torture yourself with archaic UNIX command interaction.

How might using version control make you more confident to make changes that
could break something?

    Knowing you can always return to a working version of the code.

Now that you have your workspace set up, what do you want to try using Git for?

    Code version management
